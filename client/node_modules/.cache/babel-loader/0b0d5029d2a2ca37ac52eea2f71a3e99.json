{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoggleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoggleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/LENOVO/Desktop/Applications/crwn-clothing/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","isUserAuthenticated","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoggleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import{takeLatest,put,all,call} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {signInSuccess,signInFailure,signOutSuccess,signOutFailure,signUpSuccess,signUpFailure} from './user.actions';\r\n\r\n\r\nimport{auth,googleProvider,createUserProfileDocument,getCurrentUser} \r\nfrom '../../firebase/firebase.utils'\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\r\n    try {\r\n      const userRef = yield call(\r\n        createUserProfileDocument,\r\n        userAuth,\r\n        additionalData\r\n      );\r\n      const userSnapshot = yield userRef.get();\r\n      yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\r\n    } catch (error) {\r\n      yield put(signInFailure(error));\r\n    }\r\n  }\r\n\r\n export function* isUserAuthenticated(){\r\n      try{\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n      }catch(error){\r\n        put(signInFailure(error));\r\n      }\r\n  }\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider)\r\n        getSnapshotFromUserAuth(user)\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\ntry{\r\n    const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n    getSnapshotFromUserAuth(user);\r\n}catch(error){\r\nyield put(signInFailure(error))\r\n}\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess())\r\n    }catch(error){\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\nexport function* signUp({payload:{email,password,displayName}}){\r\ntry{\r\n    const {user} = yield auth.createUserWithEmailAndPassword(email,password);\r\n    yield put(signUpSuccess({user,additionalData:{displayName}}))\r\n}catch (error) {\r\n    yield put(signUpFailure(error))\r\n}\r\n}\r\n\r\nexport function* signInAfterSignUp({payload:{user,additionalData}}){\r\nyield getSnapshotFromUserAuth(user,additionalData);\r\n}\r\n\r\nexport function* onGoggleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut)\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp)\r\n}\r\n\r\nexport function*userSagas(){\r\n    yield all([\r\n        call(onGoggleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart),\r\n        call(onSignUpSuccess),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}