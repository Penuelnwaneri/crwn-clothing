{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartASync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapShot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapShot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["C:/Users/LENOVO/desktop/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartASync","dispatch","collectionRef","collection","get","then","snapShot","collectionMap","catch","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC5CC,EAAAA,IAAI,EAACJ,eAAe,CAACK;AADuB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAChD,SAAOC,QAAQ,IAAI;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,aAAa,GAAGlB,+BAA+B,CAACiB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACc,aAAD,CAAxB,CAAR;AACD,KAHD,EAGGC,KAHH,CAGSC,KAAK,IACZR,QAAQ,CAACJ,uBAAuB,CAACY,KAAD,CAAxB,CAJV;AAKC,GAPD;AAQC,CATM","sourcesContent":["import ShopActionTypes from './shop.types';\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => ({\r\ntype:ShopActionTypes.FETCH_COLLECTIONS_START\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartASync = () => {\r\nreturn dispatch => {\r\nconst collectionRef = firestore.collection('collections');\r\ncollectionRef.get().then(snapShot => {\r\n  const collectionMap = convertCollectionsSnapshotToMap(snapShot)\r\n  dispatch(fetchCollectionsSuccess(collectionMap))\r\n}).catch(error => \r\n  dispatch(fetchCollectionsFailure(error)))\r\n}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}